- Bouquets <, > # stacks bei buffs/debuffs
- Bouquets, Text-Indikatoren

- Option je Bouquet Stacks aufaddieren
- Keine Balkenfarbe custom debuffs per spellID
- Sound für auslaufende Buffs BuffWatch

- Zweite Waffenverz. Schamanen, Erkennung welche Waffenverz.
- Hot bars vertical
- Rez-Spells DK, WL
- Abfragen auf compact party frame usw, Pizbull entlädt die Blizz-Addons (CompactRaidFrameContainer)

/run DisableAddOn("Blizzard_CUFProfiles"); DisableAddOn("Blizzard_CompactRaidFrames"); ReloadUI();


1. Health     3
2. Mana       1
3. Background 5
4. Aggro      2
5. Target     -
6. Incoming   4
7. Threat     -
8. Unit/Group highlight
9. Hot bar 1
10. Hot bar 2
11. Hot bar 3

3. Background
		6. Incoming
				1. Health
					4. Aggro
					5. Mana
					Highlight
					Player Target

5. Target
7. Threat






--local brshift = bit.rshift;
--local blshift = bit.lshift;
--local bband = bit.band;
--local bbor = bit.bor;
--
--[[local tScale;
local function VUHDO_getScale(aNumber)
	tScale = 0;

	while (floor(aNumber) ~= aNumber) do
		tScale = tScale + 1;
		aNumber = aNumber * 10;
	end

	return tScale, aNumber;
end
]]


--
--[[local tString;
local tDigit;
local tIsHighNibble;
local tAktByte;
local tSign;
local tScale;
function VUHDO_getBCDStringFromNumber(aNumber)
	tIsHighNibble = false;
	tAktByte = 0;

	if (aNumber == 0) then
		return strchar(0), 0, 1;
	elseif (aNumber < 0) then
		tSign = "-";
		aNumber = abs(aNumber);
	else
		tSign = "";
	end

	tScale, aNumber = VUHDO_getScale(aNumber);

	tString = "";
	while (aNumber > 0) do
		tDigit = aNumber % 10;

		if (not tIsHighNibble) then
			tAktByte = tDigit;
		else
			tAktByte = bbor(blshift(tDigit, 4), tAktByte);
			tString = strchar(tAktByte) .. tString;
		end

		aNumber = floor(aNumber * 0.1);
		tIsHighNibble = not tIsHighNibble;
	end

	if (tIsHighNibble) then
		tString = strchar(tAktByte) .. tString;
	end

	return tSign .. tString, tScale;
end



--
local tNumber = 0;
local tAktByte;
local tCnt;
local tStart;
local tSign;
function VUHDO_getNumberFromBcdString(aBcdString, aScale)
	tNumber = 0;

	if (strbyte(aBcdString, 1) == 45) then -- '-' -- 0010 1101 no valid bcd
		tSign = -1;
		tStart = 2;
	else
		tSign = 1;
		tStart = 1;
	end

	for tCnt = tStart, strlen(aBcdString) do
		tNumber = tNumber * 100;
		tAktByte = strbyte(aBcdString, tCnt);
		tNumber = tNumber + bband(tAktByte, 15) + brshift(tAktByte, 4) * 10;
	end

	return tSign * tNumber / (10 ^ aScale);
end
]]
